NAME: /[a-zA-Z][\w-]*/
value: ENV_VAR          -> env_var
     | INT              -> int
     | FLOAT            -> float
     | ESCAPED_STRING   -> string
     | "true"           -> true
     | "false"          -> false
     | "null"           -> null
     | inline_statement 

EQUAL.999999: "="
PLU_EQUAL.999999: "+="
MIN_EQUAL.999999: "-=" # SAME DUMB REASON AS BELOW
MUL_EQUAL.999999: "*="
DIV_EQUAL.999999: "/=" # STUPID LALR KEEPS THINKING "x /= 10" IS "NAME PATH =" AND I CAN'T SET RULE PRIORITY ONLY TERMINALS SO THIS IS THE FUCKING FIX

assignment: NAME (EQUAL|PLU_EQUAL|MIN_EQUAL|MUL_EQUAL|DIV_EQUAL) value

ENV_VAR: /\$\w+/
PATH: /([A-Z]\:\\)?[\w\-\\\/\.]+/
inline_statement: "$("statement")"
OPERATOR: "+" | "*" | "-" | "/" | "|" | ">" | "<" | "==" | "!=" | "<=" | ">=" 
cond_eq: (value | command) "==" (value | command)
conditional: cond_eq | (value | command ) (OPERATOR (value | command ))*
composite_conditional: (conditional | composite_conditional | nested_conditional) ("and" | "or") (conditional | composite_conditional | nested_conditional)
nested_conditional: "(" (nested_conditional | conditional | composite_conditional) ")"

statement_block: "{" (statement";")* statement";"? "}"

# Control Flow
foreach: "foreach" NAME "in" (NAME | statement) statement_block
if_: "if" (nested_conditional) statement_block ("elif" (conditional | composite_conditional) statement_block)* ("else" statement_block)?
do: "do" statement_block
while: "while" (nested_conditional)
for: "for" "(" statement ";" (conditional | composite_conditional) ";" statement ")" statement_block

option: "-"~0..2 (value | PATH)+
command: NAME option*




dowhile: do while
whiledo: while do

statement: foreach
         | if_
         | for
         | dowhile
         | whiledo
         | assignment
         | command

start: statement (";" statement)* ";"?

%import common.WS
%import common.ESCAPED_STRING
%import common.NUMBER
%import common.INT
%import common.FLOAT
%ignore WS

COMMENT: "#" /[^\n]/*
%ignore COMMENT